{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\n\n// Mock cattle data\nconst mockCattle = [{\n  id: 'COW001',\n  name: 'Bessie',\n  breed: 'Holstein',\n  age: 4,\n  weight: 650,\n  health: 'Excellent',\n  location: 'Barn A - Stall 1',\n  gender: 'Female',\n  dateOfBirth: '2020-03-15',\n  lastMilking: '2024-01-15T08:30:00',\n  lastVaccination: '2024-01-10',\n  owner: 'John Manager',\n  notes: 'High milk producer, gentle temperament'\n}, {\n  id: 'COW002',\n  name: 'Daisy',\n  breed: 'Jersey',\n  age: 3,\n  weight: 450,\n  health: 'Good',\n  location: 'Barn A - Stall 2',\n  gender: 'Female',\n  dateOfBirth: '2021-06-20',\n  lastMilking: '2024-01-15T09:15:00',\n  lastVaccination: '2024-01-12',\n  owner: 'John Manager',\n  notes: 'Good butterfat content'\n}, {\n  id: 'COW003',\n  name: 'Molly',\n  breed: 'Angus',\n  age: 5,\n  weight: 750,\n  health: 'Fair',\n  location: 'Barn B - Stall 1',\n  gender: 'Female',\n  dateOfBirth: '2019-09-10',\n  lastMilking: '2024-01-15T07:45:00',\n  lastVaccination: '2024-01-08',\n  owner: 'John Manager',\n  notes: 'Recovering from minor injury'\n}, {\n  id: 'COW004',\n  name: 'Rosie',\n  breed: 'Holstein',\n  age: 2,\n  weight: 550,\n  health: 'Excellent',\n  location: 'Barn A - Stall 3',\n  gender: 'Female',\n  dateOfBirth: '2022-01-25',\n  lastMilking: '2024-01-15T10:00:00',\n  lastVaccination: '2024-01-14',\n  owner: 'John Manager',\n  notes: 'Young and energetic'\n}];\nexport const useCattle = () => {\n  _s();\n  const [cattle, setCattle] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Simulate API call\n    const fetchCattle = async () => {\n      try {\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        setCattle(mockCattle);\n      } catch (err) {\n        setError('Failed to fetch cattle data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCattle();\n  }, []);\n  const addCattle = async cattleData => {\n    try {\n      const newCattle = {\n        id: `COW${String(cattle.length + 1).padStart(3, '0')}`,\n        ...cattleData,\n        dateOfBirth: cattleData.dateOfBirth || new Date().toISOString().split('T')[0],\n        lastMilking: new Date().toISOString(),\n        lastVaccination: new Date().toISOString().split('T')[0]\n      };\n      setCattle(prev => [...prev, newCattle]);\n      return {\n        success: true,\n        cattle: newCattle\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const updateCattle = async (id, cattleData) => {\n    try {\n      setCattle(prev => prev.map(cow => cow.id === id ? {\n        ...cow,\n        ...cattleData\n      } : cow));\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const deleteCattle = async id => {\n    try {\n      setCattle(prev => prev.filter(cow => cow.id !== id));\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const getCattleById = id => {\n    return cattle.find(cow => cow.id === id);\n  };\n  return {\n    cattle,\n    loading,\n    error,\n    addCattle,\n    updateCattle,\n    deleteCattle,\n    getCattleById\n  };\n};\n_s(useCattle, \"FQJm4EC7aIIlKk9ndfOcIpQYkIY=\");","map":{"version":3,"names":["useState","useEffect","mockCattle","id","name","breed","age","weight","health","location","gender","dateOfBirth","lastMilking","lastVaccination","owner","notes","useCattle","_s","cattle","setCattle","loading","setLoading","error","setError","fetchCattle","Promise","resolve","setTimeout","err","addCattle","cattleData","newCattle","String","length","padStart","Date","toISOString","split","prev","success","message","updateCattle","map","cow","deleteCattle","filter","getCattleById","find"],"sources":["C:/VSCode/COWCO/COWCO/client/src/api/useCattle.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\n// Mock cattle data\r\nconst mockCattle = [\r\n  {\r\n    id: 'COW001',\r\n    name: 'Bessie',\r\n    breed: 'Holstein',\r\n    age: 4,\r\n    weight: 650,\r\n    health: 'Excellent',\r\n    location: 'Barn A - Stall 1',\r\n    gender: 'Female',\r\n    dateOfBirth: '2020-03-15',\r\n    lastMilking: '2024-01-15T08:30:00',\r\n    lastVaccination: '2024-01-10',\r\n    owner: 'John Manager',\r\n    notes: 'High milk producer, gentle temperament'\r\n  },\r\n  {\r\n    id: 'COW002',\r\n    name: 'Daisy',\r\n    breed: 'Jersey',\r\n    age: 3,\r\n    weight: 450,\r\n    health: 'Good',\r\n    location: 'Barn A - Stall 2',\r\n    gender: 'Female',\r\n    dateOfBirth: '2021-06-20',\r\n    lastMilking: '2024-01-15T09:15:00',\r\n    lastVaccination: '2024-01-12',\r\n    owner: 'John Manager',\r\n    notes: 'Good butterfat content'\r\n  },\r\n  {\r\n    id: 'COW003',\r\n    name: 'Molly',\r\n    breed: 'Angus',\r\n    age: 5,\r\n    weight: 750,\r\n    health: 'Fair',\r\n    location: 'Barn B - Stall 1',\r\n    gender: 'Female',\r\n    dateOfBirth: '2019-09-10',\r\n    lastMilking: '2024-01-15T07:45:00',\r\n    lastVaccination: '2024-01-08',\r\n    owner: 'John Manager',\r\n    notes: 'Recovering from minor injury'\r\n  },\r\n  {\r\n    id: 'COW004',\r\n    name: 'Rosie',\r\n    breed: 'Holstein',\r\n    age: 2,\r\n    weight: 550,\r\n    health: 'Excellent',\r\n    location: 'Barn A - Stall 3',\r\n    gender: 'Female',\r\n    dateOfBirth: '2022-01-25',\r\n    lastMilking: '2024-01-15T10:00:00',\r\n    lastVaccination: '2024-01-14',\r\n    owner: 'John Manager',\r\n    notes: 'Young and energetic'\r\n  }\r\n];\r\n\r\nexport const useCattle = () => {\r\n  const [cattle, setCattle] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Simulate API call\r\n    const fetchCattle = async () => {\r\n      try {\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        setCattle(mockCattle);\r\n      } catch (err) {\r\n        setError('Failed to fetch cattle data');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCattle();\r\n  }, []);\r\n\r\n  const addCattle = async (cattleData) => {\r\n    try {\r\n      const newCattle = {\r\n        id: `COW${String(cattle.length + 1).padStart(3, '0')}`,\r\n        ...cattleData,\r\n        dateOfBirth: cattleData.dateOfBirth || new Date().toISOString().split('T')[0],\r\n        lastMilking: new Date().toISOString(),\r\n        lastVaccination: new Date().toISOString().split('T')[0]\r\n      };\r\n      \r\n      setCattle(prev => [...prev, newCattle]);\r\n      return { success: true, cattle: newCattle };\r\n    } catch (error) {\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const updateCattle = async (id, cattleData) => {\r\n    try {\r\n      setCattle(prev => prev.map(cow => \r\n        cow.id === id ? { ...cow, ...cattleData } : cow\r\n      ));\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const deleteCattle = async (id) => {\r\n    try {\r\n      setCattle(prev => prev.filter(cow => cow.id !== id));\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const getCattleById = (id) => {\r\n    return cattle.find(cow => cow.id === id);\r\n  };\r\n\r\n  return {\r\n    cattle,\r\n    loading,\r\n    error,\r\n    addCattle,\r\n    updateCattle,\r\n    deleteCattle,\r\n    getCattleById\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}